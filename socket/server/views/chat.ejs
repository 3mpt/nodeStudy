<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="/javascripts/socketio.js"></script>
</head>

<body>
    <h1>聊天室</h1>
    <h1>当前用户:
        <b id="user"></b>
    </h1>
    <input type="text" id="text"> <button id="send">send</button>
    <select id="select"></select>
    <!-- 建立socket连接 带着token 后端验证 -->
    <script>

        var select = document.querySelector("#select")
        var send = document.querySelector("#send")
        var text = document.querySelector("#text")
        var user = document.querySelector("#user")
        user.innerHTML = localStorage.getItem("username")
        const WebSocketType = {
            Error: 0, // 错误
            GroupList: 1,
            GroupChat: 2,
            SingleChat: 3
        }
        // 引入io js
        const socket = io(`ws://localhost:3000?token=${localStorage.getItem("token")}`)
        socket.on(WebSocketType.GroupChat, (msg) => {
            console.log(msg.user ? msg.user.username : "广播" + ':' + msg.data)
            console.log(msg);
        })
        socket.on(WebSocketType.SingleChat, (msg) => {
            console.log(msg.user ? msg.user.username : "广播" + ':' + msg.data)
            console.log(msg);
        })
        socket.on(WebSocketType.Error, (msg) => {
            localStorage.removeItem("token")
            location.href = '/'
        })
        socket.on(WebSocketType.GroupList, (msg) => {
            const onlineList = msg.data
            select.innerHTML = ""
            select.innerHTML = `<option value="all">all</option>` +
                onlineList.map(item => `
                    <option>${item.username}</option>
                        `
                ).join("")
        })
        send.onclick = () => {
            if (select.value === "all") {
                socket.emit(WebSocketType.GroupChat, createMessage(text.value))
            } else {
                socket.emit(WebSocketType.SingleChat, createMessage(text.value, select.value))
            }
        }
        function createMessage(data, to) {
            return {
                data, to
            }
        }
    </script>
</body>

</html>